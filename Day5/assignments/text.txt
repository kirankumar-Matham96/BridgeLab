#!/bin/bash -x
random=$((RANDOM%10))

###########################

#!/bin/bash -x
dieRoll=$((1+RANDOM%6))
echo $dieRoll

###########################

#!/bin/bash -x
i=1
while [ $i -le 2 ]
do
	randomNumber=$((1+RANDOM%6))
	sum=$((sum+randomNumber))
	i=$((i+1))
done
echo $sum

###########################

#!/bin/bash -x
let i=1
sum=0
while [ $i -le 5 ]
do
	twoDigitRandomNumber=$((10+RANDOM%90));
	sum=$((sum+twoDigitRandomNumber));
	echo sum=$sum
	i=$((i+1));
done
avg=$((sum/(i-1)))
echo "average is: "$avg

###########################

#!/bin/bash -x
result=`echo "scale=2;42/12" | bc`
echo $result" feet"

###########################

#!/bin/bash -x
result=`echo "40*60*0.3048" | bc`
echo $result" metres"

###########################

#!/bin/bash -x
result=`echo "((60*40)*0.3048)*25*0.00024711" | bc`
echo $result" acres"

###########################

# if-else:

#!/bin/bash -x
##
 # Write a program that reads 5 Random 3 digit values and 
 # then outputs the minimum and maximum value.
##

# input: 5,10,15,2,20

echo "Enter five 3 digit values"

read -p "Enter number1: " a
bigger=$a
smaller=$a

read -p "Enter number2: " b
if [ $b -gt $bigger ]
then
	bigger=$b
fi

if [ $b -lt $smaller ]
then
	smaller=$b
fi

read -p "Enter number3: " c
if [ $c -gt $bigger ]
then
	bigger=$c
fi

if [ $c -lt $smaller ]
then
	smaller=$c
fi

read -p "Enter number4: " d
if [ $d -gt $bigger ]
then
	bigger=$d
fi

if [ $d -lt $smaller ]
then
	smaller=$d
fi

read -p "Enter number5: " e
if [ $e -gt $bigger ]
then
	bigger=$e
fi

if [ $e -lt $smaller ]
then
	smaller=$e
fi

echo $bigger" is the greatest number"
echo $smaller" is the smallest number"

###########################

#!/bin/bash -x
##
 # Write a program that reads 5 Random 3 digit values and 
 # then outputs the minimum and maximum value.
##

# input: 5,10,15,2,20

echo "Enter five 3 digit values"
read -a array #reading the numbers into the array named 'array'
smaller=${array[0]}
bigger=${array[0]}
i=1

while [ $i -le $((${#array[@]}-1)) ]
do
	if [ ${array[i]} -gt $bigger ]
	then
		bigger=${array[i]}
	elif [ ${array[i]} -lt $smaller ]
	then
		smaller=${array[i]}
	fi
	i=$((i+1))
done

echo "biggest number is: "$bigger" and smallest number is: "$smaller

###########################

#!/bin/bash -x

month=`date +%d-%m-%Y | awk -F '-' '{print $2}'`
day=`date +%d-%m-%Y | awk -F '-' '{print $1}'`

if [[ ($month -ge 3) && ($month -le 6) ]]
then
	if [ $month -eq 3 ]
	then
		if [ $day -ge 20 ]
		then
			echo true
		else
			echo false
		fi
	fi
	if [ $month -eq 6 ]
	then
		if [ $day -le 20 ]
		then
			echo true
		else
			echo false
		fi
	fi
	if [[ ($month -gt 3) && ($month -lt 6) ]]
	then
		echo true
	fi
else
	echo false
fi

###########################

#!/bin/bash -x
##
# checking leap year or not.
# Also use years: 1600, 1700, 1800, 1900, 2000.
##
year=`date +%Y
if [[ ( $((year%4)) -eq 0 ) ]]
then
	if [[ ($((year%100)) -ne 0) ]]
	then
		isLeapYear=true
	else
		if [[ ( $((year%400)) -eq 0 ) ]]
		then
			isLeapYear=true
		fi
	fi
else
	isLeapYear=false
fi

if [ $isLeapYear == "true" ]
then
	echo $year" is a leap year"
else
	echo $year" is not a leap year"
fi

###########################

#!/bin/bash -x
##
# Coin Toss simulation
##
heads=0
tails=1
result=$((RANDOM%2))
if [ $result -eq $heads ]
then
	echo heads
else
	echo tails
fi

###########################

# if-elif-else:

#!/bin/bash -x
##
# read a single digit number and print it in words
##

read -p "Enter a single digit number" number
if [ $number -eq 0 ]
then
	echo zero
elif [ $number -eq 1 ]
then
	echo one

elif [ $number -eq 2 ]
then
	echo two

elif [ $number -eq 3 ]
then
	echo three

elif [ $number -eq 4 ]
then
	echo four

elif [ $number -eq 5 ]
then
	echo five

elif [ $number -eq 6 ]
then
	echo six

elif [ $number -eq 7 ]
then
	echo seven

elif [ $number -eq 8 ]
then
	echo eight

elif [ $number -eq 9 ]
then
	echo nine
else
	echo number is not a single digit or not a number at all!
fi

###########################

#!/bin/bash -x
##
# read a number and display the week day: (sun, mon, ..., sat)
##

read -p "enter a number from 1 to 7: " number
if [ $number -eq 1 ]
then
	echo sunday
elif [ $number -eq 2 ]
then
	echo monday

elif [ $number -eq 3 ]
then
	echo tuesday

elif [ $number -eq 4 ]
then
	echo wednesday

elif [ $number -eq 5 ]
then
	echo thursday

elif [ $number -eq 6 ]
then
	echo friday

elif [ $number -eq 7 ]
then
	echo saturday
else
	echo not a valid input
fi

###########################

#!/bin/bash -x
##
# read a number 1, 10, 100, 1000, ...  and display unit, ten, hundred, ...
##

read -p "Enter a number from 1, 100, 1000, 10000: " number
if [ $number -eq 1 ]
then
	echo unit
elif [ $number -eq 10 ]
then
	echo ten
elif [ $number -eq 100 ]
then
	echo hundred
elif [ $number -eq 1000 ]
then
	echo thousand
elif [ $number -eq 10000 ]
then
	echo ten thousand
else
	echo out of range
fi

###########################

#!/bin/bash -x
##
# read three numbers and perform:
#	1) a+b*c	3) c+a/b
#	2) a%b+c	4) a*b+c
# then find the max and min
##

read -p "Enter 3 numbers" a b c

A=`expr $a + $b \* $c`
B=`expr $a % $b + $c`
C=`echo "scale=1;$c+$a/$b" | bc`
D=`expr $a \* $b + $c`

echo $A $B $C $D

min=0
max=0

if [ ( `echo "if($A > $B) 1" | bc` -eq 1 ) && ( `echo "if($A > $C) 1" | bc` -eq 1 ) && ( `echo "if($A > $D) 1" | bc` -eq 1 ) ]
then
	max=$A
	if [ (`echo "if($B < $C) 1" | bc` -eq 1) &&  (`echo "if($B < $D) 1" | bc` -eq 1) ]
	then
		min=$B
	elif [ (`echo "if($C < $B) 1" | bc` -eq 1) &&  (`echo "if($C < $D) 1" | bc` -eq 1) ]
	then
		min=$C
	elif [ (`echo "if($D < $B) 1" | bc` -eq 1) &&  (`echo "if($D < $C) 1" | bc` -eq 1) ]
	then
		min=$D
	fi
elif [  (`echo "if($B > $A) 1" | bc` -eq 1) && (`echo "if($B > $C) 1" | bc` -eq 1) && (`echo "if($B > $D) 1" | bc` -eq 1) ]
then
	max=$B
	if [ (`echo "if($A < $C) 1" | bc` -eq 1) &&  (`echo "if($A < $D) 1" | bc` -eq 1) ]
	then
		min=$A
	elif [ (`echo "if($C < $A) 1" | bc` -eq 1) &&  (`echo "if($C < $D) 1" | bc` -eq 1) ]
	then
		min=$C
	elif [ (`echo "if($D < $A) 1" | bc` -eq 1) &&  (`echo "if($D < $C) 1" | bc` -eq 1) ]
	then
		min=$D
	fi
elif [  (`echo "if($C > $A) 1" | bc` -eq 1) && (`echo "if($C > $B) 1" | bc` -eq 1) && (`echo "if($C > $D) 1" | bc` -eq 1) ]
then
	max=$C
	if [ (`echo "if($B < $A) 1" | bc` -eq 1) &&  (`echo "if($B < $D) 1" | bc` -eq 1) ]
	then
		min=$B
	elif [ (`echo "if($A < $B) 1" | bc` -eq 1) &&  (`echo "if($A < $D) 1" | bc` -eq 1) ]
	then
		min=$A
	elif [ (`echo "if($D < $B) 1" | bc` -eq 1) &&  (`echo "if($D < $A) 1" | bc` -eq 1) ]
	then
		min=$D
	fi
elif [  (`echo "if($D > $A) 1" | bc` -eq 1) && (`echo "if($D > $B) 1" | bc` -eq 1) && (`echo "if($D > $C) 1" | bc` -eq 1) ]
then
	max=$D
	if [ (`echo "if($B < $C) 1" | bc` -eq 1) &&  (`echo "if($B < $A) 1" | bc` -eq 1) ]
	then
		min=$B
	elif [ (`echo "if($C < $B) 1" | bc` -eq 1) &&  (`echo "if($C < $A) 1" | bc` -eq 1) ]
	then
		min=$C
	elif [ (`echo "if($A < $B) 1" | bc` -eq 1) &&  (`echo "if($A < $C) 1" | bc` -eq 1) ]
	then
		min=$A
	fi
else
	echo all are equal
fi
echo "Max: $max and Min: $min"

###########################

#!/bin/bash -x
##
# read three numbers and perform:
#	1) a+b*c	3) c+a/b
#	2) a%b+c	4) a*b+c
# then find the max and min
##

read -p "Enter 3 numbers" a b c

A=`expr $a + $b \* $c`
B=`expr $a % $b + $c`
C=`echo "scale=1;$c+$a/$b" | bc`
D=`expr $a \* $b + $c`

echo $A $B $C $D

min=0
max=0

if [  `echo "if($A > $B) 1" | bc` -eq 1  ]
then
	if [ `echo "if($A > $C) 1" | bc` -eq 1 ]
	then
		if [ `echo "if($A > $D) 1" | bc` -eq 1 ]
		then
			max=$A
			if [ `echo "if($B < $C) 1" | bc` -eq 1 ]
			then
				if [ `echo "if($B < $D) 1" | bc` -eq 1 ]
				then
					min=$B
				else
					min=$D
				fi
			elif [ `echo "if($C < $D) 1" | bc` -eq 1 ]
			then
				min=$C
			else
				min=$D
			fi
		else
			max=$D
			if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
			then
				if [ `echo "if($A < $C) 1" | bc` -eq 1 ]
				then
					min=$A
				else
					min=$C
				fi
			elif [ `echo "if($B < $C) 1" | bc` -eq 1 ]
			then
				min=$B
			else
				min=$C
			fi
		fi
	elif [ `echo "if($C > $D) 1" | bc` -eq 1 ]
	then
		max=$C
		if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
		then
			if [ `echo "if($A < $D) 1" | bc` -eq 1 ]
			then
				min=$A
			else
				min=$D
			fi
		elif [ `echo "if($B < $D) 1" | bc` -eq 1 ]
		then
			min=$B
		else
			min=$D
		fi
	else
		max=$D
		if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
		then
			if [ `echo "if($A < $C) 1" | bc` -eq 1 ]
			then
				min=$A
			else
				min=$C
			fi
		elif [ `echo "if($B < $C) 1" | bc` -eq 1 ]
		then
			min=$B
		else
			min=$C
		fi
	fi
elif [ `echo "if($B > $C) 1" | bc` -eq 1 ]
then
	if [ `echo "if($B > $D) 1" | bc` -eq 1 ]
	then
		max=$B
		if [ `echo "if($A < $C) 1" | bc` -eq 1 ]
		then
			if [ `echo "if($A < $D) 1" | bc` -eq 1 ]
			then
				min=$A
			else
				min=$D
			fi
		elif [ `echo "if($C < $D) 1" | bc` -eq 1 ]
		then
			min=$C
		else
			min=$D
		fi
	else
		max=$D
		if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
		then
			if [ `echo "if($A < $C) 1" | bc` -eq 1 ]
			then
				min=$A
			else
				min=$C
			fi
		elif [ `echo "if($B < $C) 1" | bc` -eq 1 ]
		then
			min=$B
		else
			min=$C
		fi
	fi
elif [ `echo "if($C > $D) 1" | bc` -eq 1 ]
then
	max=$C
	if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
	then
		if [ `echo "if($A < $D) 1" | bc` -eq 1 ]
		then
			min=$A
		else
			min=$D
		fi
	elif [ `echo "if($B < $D) 1" | bc` -eq 1 ]
	then
		min=$B
	else
		min=$D
	fi
else
	max=$D
	if [ `echo "if($A < $B) 1" | bc` -eq 1 ]
	then
		if [ `echo "if($A < $C) 1" | bc` -eq 1 ]
		then
			min=$A
		else
			min=$C
		fi
	elif [ `echo "if($B < $C) 1" | bc` -eq 1 ]
	then
		min=$B
	else
		min=$C
	fi
fi

echo "Max: $max and Min: $min"

###########################

# case:

#!/bin/bash -x
##
# read a single digit number and print it in words
##

read -p "Enter a single digit number" number
case "$number" in
	0)
		echo zero;;
	1)
		echo one;;
	2)
		echo two;;
	3)
		echo three;;
	4)
		echo four;;
	5)
		echo five;;
	6)
		echo six;;
	7)
		echo seven;;
	8)
		echo eight;;
	9)
		echo nine;;
	*)
		echo number is not a single digit or not a number at all!
esac

###########################

#!/bin/bash -x
##
# read a number and display the week day: (sun, mon, ..., sat)
##

read -p "enter a number from 1 to 7: " number
case "$number" in
	1)
		echo sunday;;
	2)
		echo monday;;
	3)
		echo tuesday;;
	4)
		echo wednesday;;
	5)
		echo thursday;;
	6)
		echo friday;;
	7)
		echo saturday;;
	*)
		echo not a valid input
esac

###########################

#!/bin/bash -x
##
# read a number 1, 10, 100, 1000, ...  and display unit, ten, hundred, ...
##

read -p "Enter a number from 1, 100, 1000, 10000: " number
case "$number" in
	1)
		echo unit;;
	10)
		echo ten;;
	100)
		echo hundred;;
	1000)
		echo thousand;;
	10000)
		echo ten thousand;;
	*)
		echo out of range
esac

###########################

#!/bin/bash -x
##
# read input from user and convert units:
#	1) Feet to Inch		2) Feet to Metre
#	3) Inch to Feet		3) Metre to Feet
##

read -p "Enter a length to convert units: " input
echo "Select option to convert units:"
echo "1) Feet to Inch	2) Feet to Metre"
echo "3) Inch to Feet	4) Metre to Feet"
read option
case "$option" in
	1)
		output=$((input*12))
		output="${output} inches"
			;;
	2)
		output=`echo "scale=4;$input*0.3048" | bc`
		output="${output} metres"
			;;
	3)
		output=`echo "scale=4;$input*0.8333" | bc`
		output="${output} feet"
			;;
	4)
		output=`echo "scale=4;$input*3.28" | bc`
		output="${output} feet"
			;;
	*)
		echo invalid option
esac
echo $output
